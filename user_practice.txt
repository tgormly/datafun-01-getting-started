
(base) C:\Users\timgo>python
Python 3.10.8 | packaged by conda-forge | (main, Nov 24 2022, 14:07:00) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> 45 + 72
117
>>> # 2.2 Variables and Assignment Statements
>>>
>>> Deitel, Paul; Deitel, Harvey M.. Intro to Python for Computer Science and Data Science (p. 50). Pearson Education. Kindle Edition.
  File "<stdin>", line 1
    Deitel, Paul; Deitel, Harvey M.. Intro to Python for Computer Science and Data Science (p. 50). Pearson Education. Kindle Edition.
                                 ^
SyntaxError: invalid syntax
>>>
>>>
>>> '''
... Variables and Assignment Statements
...
... Deitel, Paul; Deitel, Harvey M.. Intro to Python for Computer Science and Data Science (p. 50). Pearson Education. Kindle Edition.
...
... '''
'\nVariables and Assignment Statements \n\nDeitel, Paul; Deitel, Harvey M.. Intro to Python for Computer Science and Data Science (p. 50). Pearson Education. Kindle Edition. \n\n'
>>>
>>>
>>> 45+72
117
>>> x = 7
>>> y = 3
>>> x + y
10
>>> total = x + y
>>> total
10
>>> x = 5
>>> total
10
>>> # total does not recalculate x + y when called - it stores its value on assignment
>>>
>>> type(x)
<class 'int'>
>>> type(total)
<class 'int'>
>>> total = total * 1.1
>>> class(total)
  File "<stdin>", line 1
    class(total)
         ^
SyntaxError: invalid syntax
>>> type(total)
<class 'float'>
>>> type = int(total)
>>> type(total)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not callable
>>> total = int(total)
>>> type(total)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not callable
>>> exit
Use exit() or Ctrl-Z plus Return to exit
>>> exit()

(base) C:\Users\timgo>python
Python 3.10.8 | packaged by conda-forge | (main, Nov 24 2022, 14:07:00) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> x = 5
>>> y = 10
>>> total = x * y
>>> type(total)
<class 'int'>
>>> total = 10.8 + 12.2 + 0.2
>>> total
23.2
>>> type(total)
<class 'float'>
>>>
>>>
>>>
>>> 2.3 Arithmetic
  File "<stdin>", line 1
    2.3 Arithmetic
        ^^^^^^^^^^
SyntaxError: invalid syntax
>>>
>>>
>>>
>>> 7*4
28
>>> 2**10
1024
>>> 2**(1/2)
1.4142135623730951
>>> 9**(1/3)
2.080083823051904
>>> 7/4
1.75
>>> 7//4
1
>>> 7%4
3
>>> 3*(1/4)
0.75
>>> 11%5
1
>>> 11//5
2
>>> 11/5
2.2
>>> (11%5) * (1/5)
0.2
>>> (11%5) * (1/5) + (11//5)
2.2
>>> 123/ 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ZeroDivisionError: division by zero
>>> -13 / 4
-3.25
>>> -13 // 4
-4
>>> z + 7
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'z' is not defined
>>> 10 * (5 + 3)
80
>>> 10 * 5 + 3
53
>>> 3 * (4 - 5)
-3
>>> 3 * 4 - 5
7
>>> '
  File "<stdin>", line 1
    '
    ^
SyntaxError: unterminated string literal (detected at line 1)
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> #### 2.4 Function print and an Intro to Single- and Double- Quoted Strings
>>>
>>>
>>>
>>>
>>>
>>>
>>> print('Welcome to Python!')
Welcome to Python!
>>> print('welcome','to','Python!')
welcome to Python!
>>> print('My name is Tim\n\n')
My name is Tim


>>> print('My name\t\t is Tim\n\n')
My name          is Tim


>>> print('My \tname\t\t is Tim\n\n')
My      name             is Tim


>>> print('My \tname\t\t \\\\is Tim\n\n')
My      name             \\is Tim


>>> print('My \tname\t\t \\\is Tim\n\n')
My      name             \\is Tim


>>> print('My \tname\t\t \\is Tim\n\n')
My      name             \is Tim


>>> print('My \tname\t\t \is Tim\n\n')
My      name             \is Tim


>>> print('My \tname\t\t \\is Tim\n\n')
My      name             \is Tim


>>> print('My \tname\t\t \'is Tim\n\n')
My      name             'is Tim


>>> print('My \tn\ame\t\t \'is Tim\n\n')
My      nme              'is Tim


>>> print('My \tn\ame\t\t \'is Tim\n\n\')
  File "<stdin>", line 1
    print('My \tn\ame\t\t \'is Tim\n\n\')
          ^
SyntaxError: unterminated string literal (detected at line 1)
>>>
>>> type('word)
  File "<stdin>", line 1
    type('word)
         ^
SyntaxError: unterminated string literal (detected at line 1)
>>> type('word)
  File "<stdin>", line 1
    type('word)
         ^
SyntaxError: unterminated string literal (detected at line 1)
>>> type('word')
<class 'str'>
>>> print('int(5.2)', 'truncates 5.2 to', int(5.2))
int(5.2) truncates 5.2 to 5
>>> triple_quoted_string = """
... This is a triple-quoted
... string that spans two lines
... """
>>> print(triple_quoted_string)

This is a triple-quoted
string that spans two lines

>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> # Getting Input from the User
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> name = input("What's your name? ")
What's your name? Tim
>>> name
'Tim'
>>> print(name)
Tim
>>> type(name)
<class 'str'>
>>> value1 = input('Enter first number: ')
Enter first number: 7
>>> value2 = input('Enter second number:
  File "<stdin>", line 1
    value2 = input('Enter second number:
                   ^
SyntaxError: unterminated string literal (detected at line 1)
>>> value2 = input('Enter second number: ')
Enter second number: 5
>>> value1 + value2
'75'
>>> value1 = int(value1)
>>> type(value1)
<class 'int'>
>>> value1 + value2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> value2 = int(value2)
>>> value1 + value2
12
>>> float('6.2') * 3.3
20.46
>>>